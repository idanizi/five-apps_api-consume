{"version":3,"sources":["App.js","index.js"],"names":["baseUrl","URL","text","App","useState","images","setImages","loading","setLoading","url","searchParams","append","process","fetchData","a","fetch","response","ok","json","meta","Error","status","statusText","data","concat","downsized_large","console","log","useEffect","getOneMoreImage","clearAll","useImages","Card","Header","Body","map","image","Img","style","margin","src","Container","fluid","Row","Button","variant","onClick","Spinner","as","animation","size","role","aria-hidden","marginLeft","Footer","ReactDOM","render","document","getElementById"],"mappings":"ySAGMA,EAAU,IAAIC,IAAI,4BAyCxB,IAAMC,EACO,2BADPA,EAEG,aAFHA,EAGW,kBAHXA,EAIG,YAiDMC,EA9CH,WAAO,IAAD,EA9ClB,WAAsB,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,OAEWF,oBAAS,GAFpB,mBAEZG,EAFY,KAEHC,EAFG,KAKbC,EAAM,IAAIR,IAAI,iBAAkBD,GACtCS,EAAIC,aAAaC,OAAO,UAAWC,oCAEnC,IAAMC,EAAS,uCAAG,sCAAAC,EAAA,sEAGdN,GAAW,GAHG,SAISO,MAAMN,GAJf,WAIRO,EAJQ,QAKAC,GALA,iCAMWD,EAASE,OANpB,wBAMJC,KACF,IAAIC,MAAJ,uBAA0BJ,EAASK,OAAnC,YAA6CL,EAASM,aAPhD,yBAUSN,EAASE,OAVlB,iBAUNK,EAVM,EAUNA,KAERjB,EAAUD,EAAOmB,OAAP,OAAcD,QAAd,IAAcA,OAAd,YAAcA,EAAMlB,cAApB,uBAAc,EAAcoB,uBAA5B,aAAc,EAA+BhB,MAZzC,kDAediB,QAAQC,IAAR,MAfc,yBAiBdnB,GAAW,GAjBG,6EAAH,qDA4Bf,OAPAoB,qBAAU,WAERf,MACC,IAII,CAAER,SAAQwB,gBAjCO,kBAAMhB,KAiCIN,UAASuB,SAF1B,kBAAMxB,EAAU,MAcsByB,GAA/C1B,EAFQ,EAERA,OAAQwB,EAFA,EAEAA,gBAAiBtB,EAFjB,EAEiBA,QAASuB,EAF1B,EAE0BA,SAE1C,OAAO,oCACL,kBAACE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,KACG/B,GAEH,kBAAC8B,EAAA,EAAKE,KAAN,KACG7B,EAAO8B,KAAI,SAAAC,GAAK,OACf,kBAACJ,EAAA,EAAKK,IAAN,CACEC,MAAO,CAAEC,OAAQ,SACjBC,IAAKJ,OAET,kBAACK,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UACdC,QAASjB,GACRtB,GAAW,oCACV,kBAACwC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,KAEJlD,GAEH,kBAAC0C,EAAA,EAAD,CAAQC,QAAQ,SACdP,MAAO,CAAEe,WAAY,OACrBP,QAAShB,GACR5B,MAMT,kBAAC8B,EAAA,EAAKsB,OAAN,KACGpD,MCrFTqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e3f7153.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, Card, Spinner } from \"react-bootstrap\";\n\nconst baseUrl = new URL(\"https://api.giphy.com/v1\");\n\nfunction useImages() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const getOneMoreImage = () => fetchData();\n\n  const url = new URL('v1/gifs/random', baseUrl);\n  url.searchParams.append('api_key', process.env.REACT_APP_GIPHY_API_KEY)\n\n  const fetchData = async () => {\n\n    try {\n      setLoading(true);\n      const response = await fetch(url);\n      if (!response.ok) {\n        const { meta } = await response.json();\n        throw new Error(`fetch failed ${response.status} ${response.statusText}`);\n      }\n\n      const { data } = await response.json();\n\n      setImages(images.concat(data?.images?.downsized_large?.url))\n\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n\n    fetchData();\n  }, [])\n\n  const clearAll = () => setImages([]);\n\n  return { images, getOneMoreImage, loading, clearAll };\n}\n\nconst text = {\n  copyright: \"Â© 2020 Idan Izicovich\",\n  title: \"Get Images\",\n  getMoreImages: 'Get More Images',\n  clear: \"Clear All\",\n}\n\nconst App = () => {\n\n  const { images, getOneMoreImage, loading, clearAll } = useImages();\n\n  return <>\n    <Card>\n      <Card.Header>\n        {text.title}\n      </Card.Header>\n      <Card.Body>\n        {images.map(image =>\n          <Card.Img\n            style={{ margin: '1em 0' }}\n            src={image} />)}\n\n        <Container fluid>\n          <Row>\n            <Button variant=\"primary\"\n              onClick={getOneMoreImage}>\n              {loading && <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />{\" \"}\n              </>}\n              {text.getMoreImages}\n            </Button>\n            <Button variant=\"danger\"\n              style={{ marginLeft: '1em' }}\n              onClick={clearAll}>\n              {text.clear}\n            </Button>\n          </Row>\n        </Container>\n\n      </Card.Body>\n      <Card.Footer>\n        {text.copyright}\n      </Card.Footer>\n    </Card>\n  </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}